--- Install worker node of Kubernetes 1.13.4 by kubeadm ---

[root@kube-node0 ~]# kubeadm join master.lab.example.com:16443 --token brtjrh.k4jxfu4h57nlu6zt --discovery-token-ca-cert-hash sha256:5518be649fe9762f303a20a06293ddd3cac9a776ce16a64a6dca19b6da18dac2
[preflight] Running pre-flight checks
[discovery] Trying to connect to API Server "master.lab.example.com:16443"
[discovery] Created cluster-info discovery client, requesting info from "https://master.lab.example.com:16443"
[discovery] Requesting info from "https://master.lab.example.com:16443" again to validate TLS against the pinned public key
[discovery] Cluster info signature and contents are valid and TLS certificate validates against pinned roots, will use API Server "master.lab.example.com:16443"
[discovery] Successfully established connection with API Server "master.lab.example.com:16443"
[join] Reading configuration from the cluster...
[join] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml'
[kubelet] Downloading configuration for the kubelet from the "kubelet-config-1.13" ConfigMap in the kube-system namespace
[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
[kubelet-start] Activating the kubelet service
[tlsbootstrap] Waiting for the kubelet to perform the TLS Bootstrap...
[patchnode] Uploading the CRI Socket information "/var/run/dockershim.sock" to the Node API object "kube-node0.lab.example.com" as an annotation

This node has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run 'kubectl get nodes' on the master to see this node join the cluster.

[root@kube-node0 ~]# 
