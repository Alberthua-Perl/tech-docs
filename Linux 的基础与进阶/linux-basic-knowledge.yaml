---
# linux-basic-knowledge.yaml includes most of linux basic to help
# you to use and understand rapidly
#course environment command:
#  kiosk@foundation0:
#    - cat /etc/rht
#      # 查看当前的课程环境代号(rh124/rh134/rh294)
#    - rht-clearcourse 0
#      # 清除当前的课程环境
#    - rht-setcourse rh124|rh134|rh294
#      # 设置对应的课程环境
#    - rht-vmctl start classroom
#      # 启动环境的 classroom 节点(软件仓库)
#    - rht-vmctl start all
#      # 启动所有的课程节点
#    - rht-vmctl status all
#      # 查看所有的课程节点状态
#    - rht-vmctl fullreset classroom|servera|serverb|workstation|utility
#      # 重置对应的节点
#    - rht-vmctl fullreset all
#      # 重置所有节点
#  password:
#    foundation0:
#      kiosk: redhat
#      root: Asimov
#    workstation,servera,serverb:
#      student: student
#      root: redhat
 
shell types:
  rhel,fedora,centos,opensuse,suse: bash(default)
  debian,ubuntu: sh(default)
  alpine: ash(default)
  IBM AIX: ksh(default)
  other types: zsh,csh

shell command format: command + [subcommand] + [options] + arguements

regular expressions:
  - lower: [a-z]
  - upper: [A-Z]
  - digit: [0-9],\d
  - alnum: [a-zA-Z0-9]
  - space: \s,\t,\n,\r,\f,\v

wirte file to disk:
  # [user space]                                [kernel space]
  write file -> /path/to/file -> system-call -> VFS(virtual filesystem) -> hardware-driver -> disk
  #                                             fat,ext,xfs,gfs,ntfs driver

Linux commands collection:
  user:
    - who
    - whoami
    - w
    - id [username]
  time:  
    - date
    - date -u
    - date -s "2022-03-26 18:10:00"
    - hwclock -w
    - date +'%Y-%m-%d %H:%M:%S'
  file:  
    - file /path/to/file
    - cat [-n] /path/to/file
    - less /path/to/file
    - more /path/to/file
    - tail -n <number> /path/to/file
    - tail -f /path/to/file
      # 追踪实时日志刷新
    - head -n <number> /path/to/file
      # 默认查看文本文件的前 10 行
    - wc -l|-w|-c /path/to/file 
    - history
      # 每个 bash shell 会话窗口只记录自身执行的命令历史直到该窗口退出。
      # 当前的命令历史被记录在内存中，退出窗口之后将写入 $HOME/.bash_history 文件中。
    - history -c
      # 清除当前 shell 会话窗口的历史记录 
    - pwd
    - cd /path/to/dir
    - cd -
    - ls -lhdRtaZi /path/to/file-or-dir
    - touch /path/to/file
    - mkdir -p /path/to/dir1/dir2
    - cp /path/to/file /path/to/dir/
    - cp --preserve=mode,ownership,timestamps /path/to/file /path/to/dir/
    - cp -Rv --preserve=mode,ownership,timestamps /path/to/dir1 /path/to/dir2/
    - mv /path/to/file /path/to/dir/
    - rm -rf /path/to/dir
    - rmdir /path/to/emptydir
    - ln /path/to/file /path/to/file-hardlink
    - ln -s /path/to/file /path/to/file-softlink
      # 创建 raw 设备: SAP,Oracle,Ceph 等用于创建 raw 设备提高 IO 效率而不通过文件系统层的写入
      # 对不同软件版本的调用解耦: /path/to/nginx -> /path/to/nginx-1.12.x,/path/to/nginx-1.15.x
  shell:
    - head -n6 /etc/passwd > h6-passwd
    - head -n6 /etc/passwd >> h6-passwd
    - head -n6 /etc/paswd 2>> h6-passwd
    - head -n6 /etc/paswd >> h6-passwd 2> /dev/null
    - head -n6 /etc/paswd &>> h6-passwd
    - head -n6 /etc/paswd >> h6-passwd 2>&1
    - tail -n20 /etc/passwd | tee t20-passwd | less
    - tail -n15 /etc/passwd | tee -a t20-passwd | less
      # 最后的 less 命令显示的是前面的命令输出而不是重定向文件的内容。
    - set
      # 查看当前 shell 环境中的所有变量
    - unset <shell-var>
    - env
    - export [-n] <env-var>
  user and group:
    - useradd chksys
    - use other group as primary group:
      - groupadd devgrp0
      - useradd -u 2000 -g devgrp0 -m -d /opt/chkdev -s /bin/bash chkdev
      - id chkdev
      - password chkdev
    - useradd -u 900 -r -m -d /opt/nginx -s /sbin/nologin nginx
      # 使用非登录用 shell 创建系统用户
    - usermod -u 1100 chksys
    - usermod -m -d /opt/chksys chksys
      # chksys 用户的 /home/chksys 家目录将迁移至 /opt 中，原来的家目录将不复存在。
      # 请务必确认该用户可迁移家目录，需提前与其他团队沟通告知！
    - usermod -L chksys
    - usermod -U chksys
    - usermod -G devgrp0 operator0
    - usermod -aG wheel operator0
    - gpasswd -d operator0 wheel
    - groupadd -g 900 -r nginx
    - groupmod -n webapp nginx
    - groupmod -g 905 webapp
    - groupdel webapp
    - userdel [-r] <username>
      # 加 -r: 同时删除家目录与邮件信息不做保留，有可能其中包含重要数据，造成数据丢失。
      # 不加 -r: 不会删除家目录数据并且持久保留，但是源目录的 uid 与 gid 会被之后新创建的同 uid 与 gid 的用户所占用。
  password:
    - chage -m 2 -M 90 -W 5 -I 2 chksys
    - chage -l chksys
      # 密码的最大过期日期随上次密码修改日期而定！
    - chage -E 2022-08-01 chksys
    - chage -d 0 chkdev
      # 强制用户下次登录时更改密码
  permission:
    - chown [-R] <username>:<groupname> /path/to/file-or-dir      
      # 建议使用 ":" 作为分隔符，防止用户名与所有组名称中出现 "." 而造成命令解析的歧义！
    - chgrp <groupname> /path/to/file-or-dir
    - chmod u+s /sbin/parted
      # suid: 4---
    - chmod u-s /sbin/parted
    - chmod g+s /path/to/dir
      # sgid: 2---
    - chmod g-s /path/to/dir
    - chmod o+t /path/to/dir
      # sbit: 1---
    - chmod o-t /path/to/dir  
  process:
    - pstree -p
    - ps aux
    - ps -efL
      # 查看系统进程及其子线程的信息(NLWP)
    - ps -L p <pid>
      # 查看进程子线程的信息
    - jobs
    - fg %<job-number>
    - bg %<job-number>
    - killall -<SIGNALNAME> <process-name>
      # 向指定的所有进程发送信号
    - pkill -<SIGNALNAME> -u <username>
      # 向指定用户运行的所有进程发送信号
    - pkill -P <ppid>
      # 终止由父进程生成的所有子进程
    - pgrep -l -u <username>
      # 查看指定用户的进程列表
    - pstree -p <username>
      # 查看指定用户的进程树
  systemd:
    - systemctl -t help
      # 查看系统上支持的单元类型
    - systemctl enable <name>.service
    - systemctl enable --now <name>.service
    - systemctl start <name>.service
    - systemctl stop <name>.service
    - systemctl disable <name>.service
    - systemctl status <name>.service
    - systemctl is-active <name>.service
    - systemctl is-enabled <name>.service
    - systemctl is-failed <name>.service
    - systemctl --failed --type=<type>
    - systemctl reload <name>.service
    - systemctl mask <name>.service
    - systemctl umask <name>.service

Linux text editor:
  - nano: text
  - vim: text
    - insert mode:
        - a,i: go into 'insert mode'
        - o: add line after where cursor is
        - Esc: exit 'insert mode' and go in 'command mode'
        - ':wq' or ':x': save file and exit vim
        - ':!q': force exit vim and no-save anything
    - command mode:
        - <n>yy: copy <n> following lines from where cursor is
        - p: paste <n> lines copied from where cursor is
        - gg: cursor go to top of text
        - Shift+g: cursor go to bottom of text
        - Shift+a: cursor go to end of line and go into 'insert mode'
        - u: revert old operte
        - x: delete single character
        - dd: delete one line
    - visual edit mode:
        - Shift+v: select one or multiple lines in 'visual edit mode'
        - Ctrl+v: select block in 'visual edit mode'
        - Esc: exit 'insert mode' and go in 'command mode'
    - extended command:
        - ':set nu': set line number for vim
        - ':set nonu': unset line number for vim
  - emacs: text
  - geditor: gui

remote login method:
  kvm login: iLO,iBMC
  telnet login: NO secure
  ssh login: password,publickey-based,gssapi

publickey-based ssh login:
  - $HOME/.ssh/: 0700
  - $HOME/.ssh/*key: 0600
  - $HOME/.ssh/authorized_keys: 0600
  - $HOME/.ssh/config: 0600

GUI mode and CLI mode:
  - systemctl get-default
    # 查看系统当前开机启动模式
  - systemctl isolate multi-user.target
  - systemctl isolate graphical.target
    # 切换不同的系统登录方式
  - systemctl set-default [multi-user.target|graphical.target]
    # 设置不同的开机启动登录模式

user and group:
  user:
    rhel5/6:
      UID 0: root(superuser)
      UID 1~499: system or application users
      UID 500+ included: regular user
    rhel7/8:
      UID 0: root(superuser)
      UID 1~999: system or application users
      UID 1000+ included: regular user
      max user UID: 60000
  group:
    primary group:
      - created with user created which of name is the same as user
      - created by manual
    secondary group:
      - added by manual
  su and sudo operate:
    /etc/sudoers.d/appuser1:
      - 'appuser1  ALL=(ALL)  ALL'
      - 'appuser1  ALL=(ALL)  NOPASSWD: /usr/sbin/lvs,/usr/sbin/pvs'
      - 'appuser1  ALL=(ALL)  NOPASSWD: ALL --> sudo -i'
    su and su -: login shell yes or no
    sudo -i and sudo su -: login shell yes or no
  user passwordd encrypt method:
    rhel5: md5
    rhel6: sha256
    rhel7/8: sha512
  user envionment file:
    /etc/passwd: local user information
    /etc/shadow: local user passwd stored file
      - password:
          first $: sha512
          second $: salt value
          third $: sha512(salt+plain password)
      - days: '$ date -d "1970-01-01 UTC 18389 day"'
    /etc/group: local group information
    /etc/profile: all users
    /etc/bashrc: all users
    $HOME/.bash_profile: current user
    $HOME/.bashrc: current user
    /etc/login.defs:
      - define user action
      - NOTE: Ubuntu can't create home dir for new user!
    /etc/security/pwquality.conf: 'minlen = 8'

file and dir permissions:
  - chmod:
    symbolic method:
      user: u,g,o,a
      perm: r(4),w(2),x(1),X

process model: fork/exec model
process to process communication method:
  signal: kill
  socket: 
    - raw,unix domain,tcp,udp
    - cockpit.socket,dbus.socket,/var/run/docker.socket
  shared memory: parent and child process
  rpc: remote progress call(rpcbind)
  gRPC: google remote process call(golang,java,python)
OS load average:
  - CPU utility
  - load average:
    - running state processes: 3
    - runnable state processes: 2
    - deep sleeping state processes: 3

systemd:
  - RHEL 5/6: SysV, init(PID 1)
  - RHEL 7/8: systemd(PID 1)
  - systemd managed: rhel,fedora,centos,centos-stream,rocky,opensuse,suse,debian,ubuntu
  - systemd unit:
    - target: top level
    - service: system service,application service
    - socket: process communication
    - device: general device
    - mount: mount operator
    - automount: autofs
    - swap: swap device
    - timer: replace cronjob
    - path: printer
    - slice: cgroup manage
    - scope: cgroup manage

upstream and redhat:
  os:
    upstream: fedora
    enterprise GA: rhel 5,6,7,8,9
  ansible: redhat ansible
  ansible tower: 
    upsream: awx
    enterprise GA: redhat ansible tower
  virtualization: RHV v4.1,v4.3
  openstack GA: RHOSP v10,v13,v16
  openshift:
    upstream: orgin
    enterprise GA: RHOCP v3.11,v4.8,v4.6,v4.5

applied rpm packages:
  - third party company
    - redhat
    - vmware
    - aliyun
    - huawei
  - internet
    - centos
    - tsinghua
    - aliyun
  - developed
    - company internal rpm repository

Linux IMPORTANT tools: grep,sed,awk

rpm commands:
  - rpm -qf /path/to/file
  - rpm -ql /path/to/rpmpackage
  - rpm -qa | grep rpmpackage-name
  - rpm -qi /path/to/rpmpackage
  - rpm -qc /path/to/rpmpackage
  - rpm -qd /path/to/rpmpackage
  - rpm -q --changelog /path/to/rpmpackage
  - rpm -q --scripts /path/to/rpmpackage

package manage method:
  rhel,centos,rocky,fedora,suse,opensuse: rpm package(*.rpm)
  debian,ubuntu: deb package(*.deb)
  alpine os: apk package(*.apk)

yum and dnf:
  rhel8: yum is the same as dnf-3 and yum is softlink to dnf-3
  command:
    - yum search "pattern"
    - yum install [-y] packagename
    - yum remove [-y] packagename
    - yum update [-y] packagename
    - yum upgrade [-y]
    - yum downgrade [-y] packagename
    - yum repolist
    - yum makecache
    - yum clean all
    - yum list packagename
    - yum history undo
    - yum info packagename
    - yum provides /path/to/file
      # 查看文件来自于哪个 RPM 软件包
    - yum group info groupname
    - yum group list hidden
      # 查看所有包组列表
  package group:
    - regular group: 
        - group of packages
        - mandatory packages(installed) and optional packages(non-installed)
    - environment group: 
        - set of regular groups

repository:
  package: local yum /etc/yum.repos.d/*.repo --> remote yum repository
  software package manage: ruby,java,nodejs,golang,php,python,... package --> nexus repository
  container image: local container image --> image registry

yum repository service: 
  - supported type: http,local(file:///path/to/repository),ftp
  - classroom method: foundation0:/content --nfs4--> classroom --http--> other nodes

storage device identity:
  scsi driver:
    - /dev/sdX: /dev/sd[a-z]
  IDE driver:   
    - /dev/hdX: /dev/hd[a-z]
  nvme driver:
    - /dev/nvmeX: /dev/nvmeXnM
  virtio_blk:
    - /dev/vdX: /dev/vd[a-z]

partition:
  MBR: 
    - master boot record(512 bytes)
    - boot loader(GRUB2 or iLILO) + partition tables(primary table1~4)
    - 2048s ~ 1MiB
  method1: /dev/vda: 20G -> p1:5G p2:3G p3:6G p4:6G
  method2: primary1 + primary2 + primary3 + extented4(1K) + logical5 + logical6 + ... + logical 15
              5G          3G         6G           1K            2G        2G
  GPT: 
    - GPT + partition tables(128)
    - double GPT backup
  system disk: 
    - legency BIOS + MBR + partition + system data
    - UEFI BIOS + GPT + partition + system data
    - /boot:
      - raw disk partition NOT LV
      - btrfs,ext3,vfat,xfs
    - other dir: support LV
  data disk: 
    - partition + application data
  tools:
    - fdisk: 
        - IBM
        - msdos(mbr)
    - gdisk: msdos and gpt
    - parted: 
        - GNU 
        - disk partition tool
        - msdos and gpt
        - CLI and human-machine
  filesystem type:
    rhel6/7: ext4(default),ext3,vfat,btrfs,gfs,ntfs
    rhel8: xfs(default),ext3,ext4,vfat,ntfs
  mount persistent fs:
    - disk partition
    - mkfs -t ext4|xfs|vfat /dev/vdc1
    - mkdir /path/to/mountpoint
    - vim /et/fstab
      /dev/vdc1  /path/to/mountpoint   ext4  defaults   0 0
    - mount -a
    - df -Th
  swap:
    - linux disk partition
    - linux virtual memory(VIRT): physical-memory(RES) + swap
      # top command: VIRT, RES
      # ps command: VSZ, RSS
    - create swap partition:
        - mkswap /dev/sdXn
        - vim /etc/fstab: /dev/sdXn  swap  swap  defaults  0 0
        - swapon -a
        - swapon -s
    - change swap priority:
        - sync: 换出 swap 中非活动页面至物理内存中
        - swapoff -a
        - vim /etc/fstab: /dev/sdXn  swap  swap  defaults,pri=N  0 0
          # 添加 pri=N 参数以更改 swap 优先级
        - swapon -a
        - swapon -s
          # EXAMPLE:
          #   [root@serverb ~]# cat /etc/fstab
          #   /dev/vdb2  swap      swap defaults  0 0
          #   /dev/vdb3  swap      swap defaults,pri=5  0 0
          #   [root@serverb ~]# swapon -s
          #   Filename                                Type            Size    Used    Priority
          #   /dev/vdb2                               partition       511996  0       -2
          #   /dev/vdb3                               partition       1048572 0       5

LVM:
  description: logical volume manager
  component: 
    - disk-partition or whole-disk
    - PV: physical volume
    - VG: 
      - volume group
      - physical extent(PE): 4M(default), 8M, 16M, 32M
    - LV: logical volume
  devicemapper frame:
    - from kernel 2.6.x
    - kernel module(driver)
    - solutions: vm,stratis,vdo,crypt,docker-image-graph-driver,mutipath
  ext4 extend: 
    - nohup resize2fs /dev/mapper/vgname-lvname &
    - active all devices exclude vdo device --> start service included vdo.service --> active vdo device
    
VDO:
  - description: virtual data optimizor
  - use vdo:
      - dnf install -y vdo kmod-kvdo
        # install vdo components
      - vdo create --device=/dev/vdb --name=vdo0 --vdoLogicalSize=50G
        # create vdo device
      - vim /etc/fstab
        # /dev/mapper/vdo0  /mnt/vdo  xfs  defaults,x-systemd.requires=vdo.service  0 0
      - systemctl status vdo.service
        # 查看 VDO 激活程序的状态，而非守护进程！

network configure:
  verify network:
    - ifconfig [-a]
    - netstat -an
    - netstat -antulp
    - route -n
      # 以上的命令来自于 net-tools 软件包已被弃用
    - ip [-s] link show
    - ip address show
      # 与 ip a s 命令相同
    - ip -br a s
      # 以简要的形式查看 ip 信息
    - ip address del 172.25.250.9/24 dev eth0
    - ip address add 172.25.250.110/24 dev eth0
    - ip address flush dev eth0
      # clear all address 
    - ip route show
    - ss -antulp
  system time service:
    - rhel5/6: ntpd
    - rhel7/8: chronyd
  network service change:
    - rhel5/6: 
        - service network [start|stop|restart]
    - rhel7:
        - network.service: 
            - initscripts manage
        - NetworkManager.service:
        - /etc/sysconfig/network-scripts/ifcfg-*: NM_CONTROLLED=no
          # 该参数可使 network.service 与 NetworkManager.service 服务共存，并且后者不会影响前者配置 IP 的状态。
    - rhel8:
        - NetworkManager.service(python): nmcli or nmtui --> dbus.socket --> NetworkManager.service --> provision network
  ipv4 address configure and route:
    - command line:
        - nmcli connection add con-name "System eth0" type ethernet dev eth0
        - nmcli connection modify "System eth0" ipv4.addresses 172.25.250.110/24 ipv4.gateway 172.25.250.254 ipv4.dns 172.25.250.254 ipv4.method manual
          # 同一台主机上可以存在多个默认路由，但是在这种情况下，可能发生间断性的访问中断。
          # 在生产的节点上，强烈建议只配置一个默认路由，而 ipv4.gateway 是默认路由的配置选项，因此，我们建议在 nmcli connection modify 过程中不要加入
          # ipv4.gateway 配置，并且将对应网口配置 /etc/sysconfig/network-scripts/ifcfg-* 中的 DEFROUTE=yes 去除！
        - nmcli connection show
        - nmcli connection down "System eth0"
          # 等同于 ifdown "System_eth0"
        - nmcli connection up "System eth0"
          # 等同于 ifup "System_eth0"
    - configure file: /etc/sysconfig/network-scripts/ifcfg-*
  hostname:
    - command line:
        - hostnamectl set-hostname rh199.lab.example.com
    - configure file:
        - echo "servera.lab.example.com" > /etc/hostname
        - echo "servera.lab.example.com" > /proc/sys/kernel/hostname
  resolv host:
    - /etc/hosts
    - /etc/resolv.conf

selinux and firewalld:
  selinux mode:
    /etc/selinux/config: enforcing,permissive,disabled
  selinux file context: file or dir label allow or drop process access
  selinux boolean: 
    - open or close selinux policy
    - for example: php -> mysql (LAMP or LNMP)
  selinux port access: non-standard port  

  practice: How to use customized web documentroot for web server?
    - install apache httpd:
      # yum install -y httpd
    - create customize web documentroot:
      # mkdir -p /webapp/data
      # mv /etc/httpd/conf.d/welcome.conf /etc/httpd/conf.d/welcome.conf.bak
      # cat /etc/httpd/conf.d/webapp.conf
      Listen 8882
      <VirtualHost *:8882>
        ServerName  serverb.lab.example.com
        DocumentRoot "/webapp/data"
        <Directory "/webapp/data">
          AllowOverride None
          Require all granted
        </Directory>
      </VirtualHost>
    - configure listen 8882 port:
      # semanage port -a -t http_port_t -p tcp 8882
      # semanage port -l | grep http_port_t
      # firewall-cmd --permanent --add-port=8882/tcp
      # firewall-cmd --reload
      # firewall-cmd --list-all
    - access webserver: 
      - verify selinux
      - verify firewalld
      - verify /var/log/messages
      - verify /var/log/httpd/error_log
      # semanage fcontext -a -t httpd_sys_content_t '/webapp/data(/.*)?'
      # restorecon -Rvv /webapp/data
      # systemctl enable httpd.service
      # systemctl start httpd.service

nfsv4 and autofs:
  nfs-practice: 
    - How to configure nfs-server and nfs-client on RHEL8? 
      # Note: [*] How use 'auid=' to configure other user to access nfs-server?
    - root@serverb: as nfs-server
        # 创建 nfs-server 并被 nfs-client 挂载共享
        - mkdir -p /shared 
        - mkdir -p /mnt/tp1/data{1..10}
        - vim /etc/exports.d/shared.exports
          /shared  172.25.250.0/255.255.255.0(rw,sync,no_root_squash)
          /mnt/tp1  172.25.250.0/255.255.255.0(rw,sync,no_root_squash)
        - systemctl start nfs-server.service
        - systemctl enable nfs-server.service
        - exportfs -a
        - showmount -e localhost
        - firewall-cmd --zone=public --permanent --add-service=nfs
        - firewall-cmd --zone=public --permanent --add-service=mountd
        - firewall-cmd --zone=public --permanent --add-service=rpc-bind
        - firewall-cmd --zone=public --reload
        - firewall-cmd --zone=public --list-all
    - root@servera: as nfs-client
        - systemctl status rpcbind.service
        - mkdir /mnt/shared
        - mount 172.25.250.11:/shared /mnt/shared
        - df -Th /mnt/shared

  aufofs-practice: 
    - automation nfs mount on client
    - client -- nfsv4 --> nfs-server
    - How configure autofs client to direct mount or indirect mount nfs share?
    - root@servera: as nfs-client
        # autofs 自动挂载直接映射的共享
        - yum install -y autofs
        - vim /etc/auto.master.d/direct.autofs
          /- /etc/auto.direct
        - vim /etc/auto.direct
          /shared -rw,sync,fstype=nfs4 serverb.lab.example.com:/shared
        - systemctl enable --now autofs.service
        - cd /shared
          # 触发自动挂载 nfs-server 的 /shared 共享
        - df -Th
          # serverb.lab.example.com:/shared nfs4      9.9G  1.6G  8.4G  16% /shared
        
        # autofs 自动挂载通配符支持的间接映射的共享
        - vim /etc/auto.master.d/indirect.autofs
          /tp-data /etc/auto.indirect
        - vim /etc/auto.indirect
          * -rw,sync,fstype=nfs4 serverb.lab.example.com:/mnt/tp1/&
        - systemctl restart autofs.service
        - cd /tp-data/data3
        - cd /tp-data/data5
          # 触发自动挂载 nfs-server 的间接映射共享目录

rhel7/8 boot progress:
  - power on system
  - system POST
  - UEFI or BIOS search boot device in boot list including NIC, disk, USB, etc
  - [*] If boot device is disk, UEFI or BIOS transform system control to GRUB2 (boot loader).
  - GRUB2 read grub2 kernel options (verify where is kernel and initramfs)
  - [*] load kernel and initramfs into memory as memory rootfs
  - kernel and initramfs load all available devices through kernel module, initramfs include different device drivers.
  - /sbin/init (systemd) in memory load initrd.target including /sysroot (real system rootfs)
  - /etc/fstab in /sysroot used to mount devices (*.mount, *.device)
  - [*] kernel transform system control to systemd (initramfs --> real-disk-fs)
  - systemd load and start all available *.target
  - load and start all available unit file
  - login system through multi-user.target or graphical.target
